curve(dnorm(x,0,1), xlim = c(-3,3), add = T, col = "red")
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
curve(dnorm(x))
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
curve(dnorm(x), xlim = c(-2,2))
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
curve(dnorm(x), xlim = c(-3,3))
?par
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
curve(dnorm(x), xlim = c(-3,3), cex = 2)
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
curve(dnorm(x), xlim = c(-3,3), cex = 1.4)
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 1.4)
curve(dnorm(x), xlim = c(-3,3))
curve(dnorm(x), xlim = c(-3,3), par(cex = 2))
curve(dnorm(x), xlim = c(-3,3), par(cex = 1.4))
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 2)
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 2)
curve(dnorm(x), xlim = c(-3,3))
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 0.5)
curve(dnorm(x), xlim = c(-3,3))
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 0.5, lwd = 3)
curve(dnorm(x), xlim = c(-3,3))
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 0.5, lwd = 3, col = "lemon")
curve(dnorm(x), xlim = c(-3,3))
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 0.5, lwd = 3, col = "forest")
# Plot the N(0, 1) p.d.f. (use the one created in exercise 1.1) using the R function curve(). Try out
# some graphical parameters of this function, e.g., cex, lwd, col, main, etc.
par(cex = 0.5, lwd = 3, col = "orange")
curve(dnorm(x), xlim = c(-3,3))
curve(dnorm(x), xlim = c(-3,3), cex = 0.5)
curve(dnorm(x), xlim = c(-3,3), cex = 0.5)
curve(dnorm(x), xlim = c(-3,3), lwd = 1,cex = 0.5)
curve(dnorm(x), xlim = c(-3,3),main = "nice curve", lwd = 1,cex = 0.5)
set.seed(456)
m=10000 x=runif(m,1,3)
m=10000
?runiif
?runif
x=runif(m,0,1)
g <- function(x){sqrt(-log(x))/2}
# (a) Use the R function integrate() to compute the value of I
I <- integrate(myFun, lower = 0, upper = 1)
# (a) Use the R function integrate() to compute the value of I
I <- integrate(g, lower = 0, upper = 1)
I
set.seed(456)
m=10000
x=runif(m,0,1)
g(x)
I_MC <- mean(g(x))
I_MC
I
error <- abs(I_MC - I)
I$value
error <- abs(I_MC - I$value)
error
I_MC_var <- var(g(x))
I_MC_var
I_MC_var <- var(g(x))/m
I_MC_var
x-mean(x)
c <- -((x - mean(x)) * (g(x) - mean(g(x))))/(g(x) - mean(g(x)))
c
c <- -(sum((x - mean(x)) * (g(x) - mean(g(x)))))/sum((g(x) - mean(g(x))))
c
c <- -(sum((x - mean(x)) * (g(x) - mean(g(x)))))/sum((g(x) - mean(g(x)))^2)
c
I_C <- x + c(g(x) - I_MC)
I_C
I_C <- mean(x + c(g(x) - I_MC))
I_C
c_star <- -(sum((x - mean(x)) * (g(x) - mean(g(x)))))/sum((g(x) - mean(g(x)))^2)
I_C <- mean(x + c_star * (g(x) - I_MC))
I_C
c_s <- - cov(x, g(x))/var(g(x))
c_star <- -(sum((x - mean(x)) * (g(x) - mean(g(x)))))/sum((g(x) - mean(g(x)))^2)
c_s <- - cov(x, g(x))/var(g(x))
c_s
c_star
cov(x,g(x)) ^2 == (cov(x,g(x)))^2
Var_I_C <- var(x) - (cov(x, g(x)^2))/var(g(x))
Var_I_MC <- var(g(x))/m # estimate of the variance
Var_I_C < Var_I_MC
Var_I_C
Var_I_MC
Var_red <- ((Var_I_MC - Var_I_C)/Var_I_MC)* 100
Var_red
u <- runif(m,0,1)
######
E_X <- mean(x)
######
c_st <- -cov(g(x), x)/var(x)
mean(x)
I_cc <- g(x) + c_st * (x - mean(x))
Icc
I_cc
I_cc <- mean(g(x) + c_st * (x - mean(x)))
I_cc
I_MC
I_cc == I_MC
I_cc
I_MC
I
I_cc == I_MC
abs(I_cc - I_MC)
abs(I_cc - I)
abs(I_cc - I.value)
abs(I_cc - I$value)
I_cc < I_MC
I
I_cc > I_MC
Var_I_C <- var(g(x)) - c_st
# (d) What’s the percentage of variance reduction that is achieved when using I_C instead
# of I_MC?
Var_red <- ((Var_I_MC - Var_I_C)/Var_I_MC)* 100
Var_red
Var_I_C
Var_I_C <- (var(g(x)) - c_st)/m
Var_I_C <- var(x) - (cov(x, g(x)^2))/var(g(x))
Var_I_C < Var_I_MC
Var_I_C <- (var(g(x)) - c_st)/m
Var_I_C < Var_I_MC
# (d) What’s the percentage of variance reduction that is achieved when using I_C instead
# of I_MC?
Var_red <- ((Var_I_MC - Var_I_C)/Var_I_MC)* 100
Var_red
Var_I_MC
Var_I_C
Var_I_C <- (var(g(x)) - c_st)/m
Var_I_C
Var_I_C
Var_I_C < Var_I_MC
Var_C <- var(g(x) + c_st^2 * var(x) + 2 * c_st * cov(x,g(x)))
Var_C
c_st
Var_I_C <- (var(g(x)) - c_st)
Var_I_C
Var_I_C <- (var(g(x)) - (cov(g(x), x))^2/var(x))
Var_I_C
Var_I_C < Var_I_MC
Var_I_C <- (var(g(x)) - ((cov(g(x), x))^2/var(x)))
Var_I_C
Var_I_C < Var_I_MC
Var_I_C <- (var(g(x)) - ((cov(g(x), x))^2/var(x)))/m
Var_I_C < Var_I_MC
# (d) What’s the percentage of variance reduction that is achieved when using I_C instead
# of I_MC?
Var_red <- ((Var_I_MC - Var_I_C)/Var_I_MC)* 100
Var_red
######
c_st <- -cov(g(x), x)/var(x)
I_cc <- mean(g(x) + c_st * (x - mean(x)))
Var_I_C <- (var(g(x)) - ((cov(g(x), x))^2/var(x)))/m
# (d) What’s the percentage of variance reduction that is achieved when using I_C instead
# of I_MC?
Var_red <- ((Var_I_MC - Var_I_C)/Var_I_MC)* 100
Var_I_C <- (var(g(x)) - ((cov(g(x), x))^2/var(x)))/m
Var_I_C
Var_I_MC
# (d) What’s the percentage of variance reduction that is achieved when using I_C instead
# of I_MC?
Var_red <- ((Var_I_MC - Var_I_C)/Var_I_MC)* 100
Var_red
######
c_star <- -cov(g(x), x)/var(x)
I_c <- mean(g(x) + c_st * (x - mean(x)))
Var_I_C <- (var(g(x)) - ((cov(g(x), x))^2/var(x)))/m
Var_I_MC - Var_I_C
(Var_I_MC - Var_I_C)
# (d) What’s the percentage of variance reduction that is achieved when using I_C instead
# of I_MC?
Var_red_p <- ((Var_I_MC - Var_I_C)/Var_I_MC)* 100
DebTrivedi
data(DebTrivedi)
install.packages("rtkpp")
install.packages("rtkpp")
install.packages("Rcpp")
library(rtkpp)
datasets.load
datasets
?datasets
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(help = "datasets")
library("datasets", lib.loc="C:/Program Files/R/R-3.5.1/library")
library(datasets)
datasets::fdeaths
load(WorldPhones)
WorldPhones
WWWusage
WorldPhones
Titanic
# read in data
crabs <- read.csv("crab.csv", delimiter="")
# read in data
crabs <- read.csv("crab.csv")
# read in data
crabs <- read.csv("crab.csv")
# read in data
crabs <- read.csv2("crab.csv")
# read in data
crabs <- read.txt("crab.csv")
?read.csv
# read in data
crabs <- read.table("crab.csv")
# read in data
crabs <- read.table("crab.txt")
?dir
getwd()
rm(list=ls())
library(rstudioapi) # to automatically set the working directory to this file's path.
# read in data
crabs <- read.table("crab.txt")
#set the working directory to this file's path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read in data
crabs <- read.table("crab.txt")
crabs
str(crab)
str(crabs)
crabs <- read.csv("crab.csv")
crabs
str(crabs)
crabs <- read.csv("crabs_preprocessed.csv")
crabs
str(crabs)
# read in data
crabs <- read.csv("crabs_preprocessed.csv")
## Correlation matrix
library(corrplot)
## Correlation matrix
install.packages("corrplot")
Correl <- cor(crabs)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
heat_map_correlations <- corrplot(Correl, method = "color", col = col(200),
# type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
library(corrplot)
heat_map_correlations <- corrplot(Correl, method = "color", col = col(200),
# type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "color", col = col(200),
type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
?corrplot
heat_map_correlations <- corrplot(Correl, method = "circle", col = col(200),
#type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "square", col = col(200),
#type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "number", col = col(200),
#type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "shade", col = col(200),
#type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "color", col = col(200),
#type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "pie", col = col(200),
#type = "upper",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "lower",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
# p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = TRUE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE, title = "Correlations between variables")
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "circle", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "color", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "original", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "FPC", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "AOE", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "original", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE,
addshade = "positive")
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE,
addshade = "negative")
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE,
addshade = "all")
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE,
plotCI = "circle")
heat_map_correlations <- corrplot(Correl, method = "ellipse", col = col(200),
type = "full",
order = "hclust", number.cex = .7,
addCoef.col = "black", # Add coefficient of correlation
tl.col = "black", tl.srt =45 , # Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag = FALSE)
library(psych)
multi.hist(crabs,nrow=NULL,ncol=NULL,density=TRUE,freq=FALSE,bcol="white",
dcol=c("black","black"),dlty=c("dashed","dotted"),
main=NULL,mar=c(2,1,1,1),breaks=21)
summary(crabs)
str(crabs)
crabs$color = as.factor(crabs$color)
str(crabs)
# Factorize color, and spine condition
crabs$color = as.factor(crabs$color)
# read in data
crabs <- read.csv("crabs_preprocessed.csv")
?glm
# Factorize color, and spine condition
fit <- glm(satellites ~ ., data = crabs, family=poisson(link=log))
summary(fit)
fit.2<- step(glm(satellites~., data= crabs, family=poisson(link=log)))
summary(fit)
summary(fit.2)
?step
