# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu*(1-mu)                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$carapace_width)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
x=as.numeric(crabs$carapace_width)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel
mymodel <- IRWLS(x,y,0.000001,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- logLik(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu*(1-mu)                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$carapace_width)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu*(1-mu)                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$carapace_width)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
x=as.numeric(crabs$carapace_width)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu*(1-mu)                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
print(w)
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$carapace_width)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
x=as.numeric(crabs$carapace_width)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu*(1-mu)                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$carapace_width)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel
x=as.numeric(crabs$color)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.000001,0.95)
mymodel
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.01,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while (abs(delta.Dev)>tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
print(delta.Dev)
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.01,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while ( abs(delta.Dev) > tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- 1/(1+exp(-eta))               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
print(abs(delta.Dev))
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.01,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while ( abs(delta.Dev) > tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- exp(eta)               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
print(abs(delta.Dev))
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,5,0.95)
mymodel
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while ( abs(delta.Dev) > tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- exp(eta)               # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
print(abs(delta.Dev))
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,5,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while ( abs(delta.Dev) > tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
print(eta)
mu <- exp(eta)              # fitted value
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
print(abs(delta.Dev))
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,5,0.95)
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while ( abs(delta.Dev) > tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- exp(eta)              # fitted value
print(mu)
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
print(abs(delta.Dev))
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,5,0.95)
mymodel <- IRWLS(x,y,0.1,0.95)
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.1,0.95)
mymodel
# 4.4
# NEW IRWLS using the deviance
IRWLS <- function(x,y,tolerance,lev){
# x        : predictor
# y        : binary responce
# tolerance: stopping criterion
# lev      : level for the confidence intervals
Dev       = 0
delta.Dev = 2*tolerance
n         = length(x)
mu <- rep(mean(y), n)     # initialize mu
eta <- log(mu)                 # initialize eta
while ( abs(delta.Dev) > tolerance) {
w <- mu                      # weight = variance
z <- eta + (y - mu)/(mu*(1-mu))     # working response
mod <- lm(z ~ x, weights = w)       # weighted regression
eta <- mod$fit                      # linear predictor
mu <- exp(eta)              # fitted value
print(mu)
Dev.old   = Dev
Dev       = 2*sum(y*log(1/mu)+(1-y)*log(1/(1-mu)))
delta.Dev = Dev- Dev.old
print(abs(delta.Dev))
}
model.coef    = mod$coefficients
model.se      = sqrt(diag(summary(mod)$cov.unscaled))
lower         = mod$coefficients-qnorm(1-(1-lev)/2)*model.se
upper         = mod$coefficients+qnorm(1-(1-lev)/2)*model.se
CI            = cbind(lower,upper)
Z             = mod$coefficients/model.se
pvalues       = 2*pnorm(abs(Z), lower.tail = FALSE)
list(coeff=model.coef,se=model.se,default.glm.ConfInt=CI,z.stat=Z,p.values=pvalues)
}
x=as.numeric(crabs$weight)
y=as.numeric(crabs$satellites)
mymodel <- IRWLS(x,y,0.1,0.95)
